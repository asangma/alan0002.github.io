title Canvas3DGraphicsLayerView: add graphics

C3DGLV->+C3DGLV: _add(graphics)

C3DGLV->+C3DGLV: _getOrCreateCanvas3DSymbol(symbol)
opt If Canvas3DSymbolSet instance for symbol doesn't yet exist
  C3DGLV->SymbolConverter: toWeb3DSymbol(symbol)
  note over SymbolConverter: Convert 2D symbols to 3D
  SymbolConverter-->C3DGLV: Symbol3D
  C3DGLV->+Canvas3DSymbolFactory: make(symbol)
  Canvas3DSymbolFactory->+Canvas3DSymbolSet: new Canvas3DSymbolSet
  loop For each symbol layer
    Canvas3DSymbolSet->+Canvas3DSymbolFactory: make(symbolLayer)
    Canvas3DSymbolFactory->Canvas3D*Symbol: new Canvas3D*Symbol
    note over Canvas3D*Symbol: fetch resources and create WebGL engine objects\nwhich are shared by all graphics using this symbol
    Canvas3D*Symbol-->Canvas3DSymbolFactory: Canvas3D*Symbol
    Canvas3DSymbolFactory-->-Canvas3DSymbolSet: Canvas3D*Symbol
  end
  Canvas3DSymbolSet-->-Canvas3DSymbolFactory: Canvas3DSymbolSet
  Canvas3DSymbolFactory-->-C3DGLV: Canvas3DSymbolSet
end

C3DGLV-->-C3DGLV: Canvas3DSymbolSet

C3DGLV->+C3DGLV: _createCanvas3DGraphic(...)
C3DGLV->+Canvas3DSymbolSet: createCanvas3DGraphic(graphic)
loop For each symbol layer
  Canvas3DSymbolSet->Canvas3D*Symbol: createCanvas3DGraphic(graphic)
  note over Canvas3D*Symbol: create WebGL engine objects\nwhich are unique to graphic
  Canvas3D*Symbol-->Canvas3DSymbolSet: new Canvas3DGraphic  
end
Canvas3DSymbolSet-->-C3DGLV: new Canvas3DGraphicSet
C3DGLV->Canvas3DGraphicSet: initialize(stage)
note over Canvas3DGraphicSet: call initialize() on each contained Canvas3DGraphic
C3DGLV->C3DGLV: _createLabelsForGraphic(...)
C3DGLV->C3DGLV: _addGraphicToSpatialIndex(...)
C3DGLV->-C3DGLV:
C3DGLV->-C3DGLV:
